{"version":3,"sources":["./src/app/components/security/container/myVisitor/visitor.component.ts","./src/app/components/security/container/myVisitor/visitor.component.html","./src/app/components/security/container/security.component.ts","./src/app/components/security/container/security.component.html","./src/app/components/security/security-routing.module.ts","./src/app/components/security/security.module.ts","./src/app/components/security/ui/visitorform/visitorform.component.ts","./src/app/components/security/ui/visitorform/visitorform.component.html"],"names":[],"mappings":"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","file":"src_app_components_security_security_module_ts.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { companyDB } from '../../../../shared/tables/company';\n\nimport { DatatableComponent, ColumnMode } from '@swimlane/ngx-datatable';\nimport { Router } from '@angular/router';\nimport { VisitorQuery } from '../../../Admin/visitor/state/visitore.query'\nimport { VistiorService } from '../../../Admin/visitor/state/vistior.service'\nimport * as moment from 'moment';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-visitor',\n  templateUrl: './visitor.component.html',\n  styleUrls: ['./visitor.component.scss']\n})\nexport class VisitorsComponent implements OnInit {\n  rows = [];\n  public company = [];\ndata:any\n  temp = [];\n\n  cols = [\n    { name: 'id', label:'S.NO'},\n    { name: 'visitor', label:'Visitor'},\n    { name: 'address', label:'Address'},\n    { name: 'reason', label:'Reason'},\n    { name:'contact_number', label: 'Mobile'},\n    {name:'customer_name',label:'Customer Name'},\n    { name: 'timein', label:'Timein'},\n    { name: 'timeout' ,label:'Timeout'},\n    { name: 'approval_status', label:'ApprovalStatus'},\n    { name: 'approval_time', label:'Approval Time'},\n  ];\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n\n  ColumnMode = ColumnMode;\n  interval: number;\n\n  constructor(\n    private service: VistiorService,\n    private query: VisitorQuery,\n    private router: Router,\n    public toster: ToastrService,\n  ) {\n    \n    this.company = companyDB.data;\n    // cache our list\n    this.temp = [...this.company];\n\n    // push our inital complete list\n      this.rows = this.company;\n    \n  }\ngetRequest(){\n  let datas=[]\n  this.service.get().subscribe((data) => {\n    console.log(data)\n    if(data.status){\n      console.log('kkk')\n      for (let i = 0; i < data.data.length; i++) {\n     datas.push({\n          id: data.data[i].id,\n          visitor: data.data[i].visitor   ,\n          contact_number:data.data[i].contact_number,\n          approval_status:data.data[i].approval_status,\n          customer_name:data.data[i].customer_name,  \n            address: data.data[i].address,\n          timein:data.data[i].time_in,\n          timeout: data.data[i].time_out,\n          reason:data.data[i].reason,\n          approval_time: data.data[i].approval_time,\n        });\n      }\n    this.data=datas\n\n    }\n    });\n}\n \n  updateFilter(event) {\n  \n    const val = event.target.value.toLowerCase();\n    console.log(val);\n    // filter our data\n    const temp = this.data.filter(function (d) {\n      return d.name.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n\n    // update the rows\n    this.data = temp;\n    // Whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  ngOnInit(): void {\n    this.getRequest();\n    this.interval = setInterval(() => { this.getRequest(); }, 5000);\n   \n   }\n   ngOnDestroy() {\n     if (this.interval) {\n       clearInterval(this.interval);\n     }\n   }\n\n\n  onCheckOut(event: any): void {\n    let data \n        console.log(event.timein)\n       \n    var date = moment().format('YYYY-MM-DD HH:mm:ss');\n    const selectedId = event.id;\n    if(event.timein==null) {\n      data = {\n        id: selectedId,\n        time: date,\n        status:1\n      }\n    }else{\n      data = {\n        id: selectedId,\n        time: date,\n        status:0\n      }  \n    }\n  \n    this.service.updateTime(data).subscribe(res=>{\n      if(res.status){\n        this.toster.success(res.message);\n        this.getRequest()\n      }else {\n        this.toster.error(res.message);\n      }\n    });\n  \n  }\n  \n}\n","<app-breadcrumb ></app-breadcrumb>\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <h5>All Visitors</h5>\n                </div>\n                <div class=\"card-body custom-datatable\">\n                    <input type=\"text\" class=\"filter-ngx form-control\" placeholder='Type to filter the name column...'\n                        (keyup)=\"updateFilter($event)\" />\n                        <app-table\n                        [user_data]=\"data\"\n                        [columns]=\"cols\"\n                        (checkout)=\"onCheckOut($event)\"\n                        >\n                        </app-table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { companyDB } from '../../../shared/tables/company';\n\nimport { DatatableComponent, ColumnMode } from '@swimlane/ngx-datatable';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { VisitorQuery } from '../../Admin/visitor/state/visitore.query';\nimport { VistiorService } from '../../Admin/visitor/state/vistior.service';\nimport * as moment from 'moment';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-security',\n  templateUrl: './security.component.html',\n  styleUrls: ['./security.component.scss'],\n})\nexport class SecurityComponent implements OnInit {\n  someSubscription: any;\n  data: any;\n\n  cols = [\n    { name: 'id', label:'S.NO'},\n    { name: 'visitor', label:'Visitor'},\n    { name: 'address', label:'Address'},\n    { name: 'reason', label:'Reason'},\n    { name:'contact_number', label: 'Mobile'},\n    { name: 'timein', label:'Timein'},\n    { name: 'timeout' ,label:'Timeout'},\n    { name: 'approval_status', label:'ApprovalStatus'},\n    { name: 'approval_time', label:'Approval Time'},\n  ];\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n\n  ColumnMode = ColumnMode;\n  interval: number;\n\n  constructor(\n    private service: VistiorService,\n    private query: VisitorQuery,\n    private router: Router,\n    public toster: ToastrService\n  ) {\n    \n  }\n\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    console.log(val);\n    // filter our data\n    const temp = this.data.filter(function (d) {\n      return d.name.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n\n    // update the rows\n    this.data = temp;\n    // Whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n\n  getRequest() {\n    let datas = [];\n    this.service.getRequest().subscribe((data) => {\n      console.log(data);\n      if (data.status) {\n        console.log('kkk');\n        for (let i = 0; i < data.data.length; i++) {\n          datas.push({\n            id: data.data[i].id,\n            visitor: data.data[i].visitor,\n             contact_number:data.data[i].contact_number,\n            approval_status: data.data[i].approval_status,\n            customer: data.data[i].customer_name,\n            address: data.data[i].address,\n            timein: data.data[i].time_in,\n            timeout: data.data[i].time_out,\n            reason: data.data[i].reason,\n            approval_time: data.data[i].approval_time,\n          });\n        }\n        this.data = datas;\n      }\n    });\n  }\n  ngOnInit(): void {\n    this.getRequest();\n    this.interval = setInterval(() => { this.getRequest(); }, 5000);\n   \n   }\n   ngOnDestroy() {\n     if (this.interval) {\n       clearInterval(this.interval);\n     }\n   }\n  onCheckOut(event: any): void {\n    let datas = [];\n    console.log(event);\n    var date = moment().format('YYYY-MM-DD HH:mm:ss');\n    const selectedId = event.id;\n    let data = {\n      id: selectedId,\n      exitTime: date,\n    };\n    console.log('sada');\n    this.service.updateTime(data).subscribe();\n    this.getRequest();\n  }\n}\n","<app-breadcrumb ></app-breadcrumb>\n<div class=\"container-fluid\" >\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <h5> Today Vsitior</h5>\n                </div>\n                <div class=\"card-body custom-datatable\">\n                    <input type=\"text\" class=\"filter-ngx form-control\" placeholder='Type to filter the name column...'\n                        (keyup)=\"updateFilter($event)\" />\n                        <app-table\n                        [user_data]=\"data\"\n                        [columns]=\"cols\"\n                        (checkout)=\"onCheckOut($event)\"\n                        >\n                        </app-table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SecurityComponent } from '../../components/security/container/security.component';\nimport { VisitorsComponent } from './container/myVisitor/visitor.component';\nimport { VisitorFormComponent } from './ui/visitorform/visitorform.component';\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n   \n  children:[\n    {\n      path: '',\n      component: SecurityComponent\n    },\n\n    {\n      path: 'visitors', \n      component: VisitorsComponent\n  \n  },{\n    path:'addRquest',\n    component: VisitorFormComponent\n  }\n  ]\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SecurityRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../shared/shared.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { SecurityRoutingModule } from './security-routing.module';\nimport { SecurityComponent } from './container/security.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport {VisitorFormComponent} from '../security/ui/visitorform/visitorform.component'\nimport {VisitorsComponent} from '../security/container/myVisitor/visitor.component'\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    SecurityRoutingModule,\n    NgxDatatableModule,\n    NgbModule,\n    NgSelectModule,\n    \n    \n  ],\n  declarations: [SecurityComponent,VisitorFormComponent,VisitorsComponent]\n})\nexport class SecurityeModule { }\n","import { formatDate } from '@angular/common';\nimport { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { VistiorService } from '../../../Admin/visitor/state/vistior.service';\nimport * as moment from 'moment';\nimport { CustomerService } from '../../../Admin/customer/state/customer.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-visitorform',\n  templateUrl: './visitorform.component.html',\n  styleUrls: ['./visitorform.component.scss'],\n  // providers: [{ provide: VisitorService, useValue: VisitorService }]\n})\nexport class VisitorFormComponent implements OnInit {\n  form: FormGroup;\n  clients: any;\n  customers: any;\n  data: any[];\n  isFormSubmitted = false\n\n  constructor(\n    private fb: FormBuilder,\n    private service: VistiorService,\n    private serviceCustomer:CustomerService,\n    public toster: ToastrService,\n    public router: Router\n  ) {\n    const PAT_NAME = \"^[a-zA-Z ]{2,20}$\";\n    const PAT_EMAIL = \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+[.][a-zA-Z]{2,4}$\";\n\n    this.form = this.fb.group({\n    \n      name: [, [Validators.required, Validators.pattern(PAT_NAME)]],\n      contact_number: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(\n            /^[(]{0,1}[0-9]{3}[)]{0,1}[-\\s\\.]{0,1}[0-9]{3}[-\\s\\.]{0,1}[0-9]{4}$/\n          ),\n        ],\n      ],\n      address: [, [Validators.required]],\n      status: '1',\n      reason: [, [Validators.required]],\n      visitor_role: [, Validators.required],\n      customer_id: [, Validators.required],\n    });\n   \n   \n  }\n\n  ngOnInit(): void {\n    let datas=[]\n    this.serviceCustomer.get().subscribe((data) => {\n    console.log(data.data.length)\n    if(data.status ===1){\n      for (let i = 0; i < data.data.length; i++) {\n     datas.push({\n          id: data.data[i].id,\n          name: data.data[i].name,\n        });\n      }\n    this.data=datas\n\n    }\n   \n    });\n  }\n\n  onSubmit() {\n    console.log(this.form.value)\n   this.isFormSubmitted = true\n    this.service.add(this.form.value).subscribe((res: any)=>{\n      if (res.status) {\n        this.toster.success(res.message);\n        setInterval(()=>{this.router.navigate(['security'])},3000)\n      } else {\n        this.toster.error(res.message);\n      }\n    })\n   \n    \n  }\n\n  onCancel() {\n    this.form.reset();\n  }\n\n}\n","<app-breadcrumb></app-breadcrumb>\n<div class=\"col-sm-12\" >\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>Add New Request</h5>\n    </div>\n    <div class=\"card-body\" >\n      <form class=\"theme-form\" [formGroup]=\"form\" >\n        <div class=\"form-group row\">\n          <label class=\"col-sm-3 col-form-label\" for=\"inputEmail3\">Full Name</label>\n          <div class=\"col-sm-9\">\n            <input class=\"form-control\" id=\"\" type=\"text\" placeholder=\"Full Name\" formControlName=\"name\"\n              [ngClass]=\"{ 'is-invalid': (isFormSubmitted && form.controls.name.errors) || (!form.controls.name.pristine && form.controls.name.invalid) }\" />\n              <div class=\"invalid-feedback\"\n                        *ngIf=\"(isFormSubmitted && form.controls.name.errors) || (!form.controls.name.pristine && form.controls.name.invalid)\">\n                        <div *ngIf=\"form.controls.name.errors.required\"><h5 style=\"color:red\">Name is required</h5></div>\n                        <div *ngIf=\"form.controls.name.errors.pattern\"><h5 style=\"color:red\">Only Alphabets with space\n                          between 2 to\n                          20\n                          characters</h5></div>\n\n                    </div>\n          </div>\n        </div>\n        <div class=\"form-group row\" >\n          <label class=\"col-sm-3 col-form-label\" for=\"inputPassword3\">Contact Number</label>\n          <div class=\"col-sm-9\">\n            <input class=\"form-control\" id=\"inputnumber\" type=\"number\" placeholder=\"Contact\"\n              formControlName=\"contact_number\" [ngClass]=\"{ 'is-invalid': (isFormSubmitted && form.controls.contact_number.errors) || (!form.controls.contact_number.pristine && form.controls.contact_number.invalid) }\" />\n              <div class=\"invalid-feedback\"\n              *ngIf=\"(isFormSubmitted && form.controls.contact_number.errors) || (!form.controls.contact_number.pristine && form.controls.contact_number.invalid)\">\n              <div *ngIf=\"form.controls.contact_number.errors.required\"><h5 style=\"color:red\">telephone is required</h5></div>\n              <div *ngIf=\"form.controls.contact_number.errors.pattern\"><h5 style=\"color:red\">enter 10 digit number only</h5></div>\n          </div>\n\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-sm-3 col-form-label\" for=\"inputPassword3\">Address</label>\n          <div class=\"col-sm-9\">\n            <input  class=\"form-control\" id=\"url\" type=\"text\" placeholder=\"Address\" formControlName=\"address\"\n            [ngClass]=\"{ 'is-invalid': (isFormSubmitted && form.controls.address.errors) || (!form.controls.address.pristine && form.controls.address.invalid) }\"\n            >\n            <div class=\"invalid-feedback\"\n                        *ngIf=\"(isFormSubmitted && form.controls.address.errors) || (!form.controls.address.pristine && form.controls.address.invalid)\">\n                        <div *ngIf=\"form.controls.address.errors.required\"><h5 style=\"color:red\">Address is required</h5></div>\n\n                    </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-sm-3 col-form-label\" for=\"\">Reason</label>\n          <div class=\"col-sm-9\">\n            <input  class=\"form-control\" id=\"url\" type=\"text\" placeholder=\"reason\" formControlName=\"reason\"\n            [ngClass]=\"{ 'is-invalid': (isFormSubmitted && form.controls.reason.errors) || (isFormSubmitted && !form.controls.reason.pristine && form.controls.reason.invalid) }\"\n            >\n            <div class=\"invalid-feedback\"\n                        *ngIf=\"( isFormSubmitted && form.controls.reason.errors) || (isFormSubmitted && !form.controls.reason.pristine && form.controls.reason.invalid)\">\n                        <div *ngIf=\"form.controls.reason.errors.required\"><h5 style=\"color:red\">reason is required</h5></div>\n\n                    </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-sm-3 col-form-label\">Visitors Role</label>\n          <div class=\"col-sm-9\" >\n                  \n                  <select   class=\"form-control digits\" id=\"exampleFormControlSelect9\"  formControlName=\"visitor_role\" placeholder=\"select role\" >\n                      <option  value=\"cab\">cab</option>\n                      <option  value=\"delviery\">delviery</option>\n                      <option  value=\"guest\">guest</option>\n                      <option value=\"parcels\">parcels</option>\n                      <option  value=\"others\">others</option>\n                  </select>\n             \n          </div>\n       \n      </div>\n        <div class=\"form-group row\">\n          <label class=\"col-sm-3 col-form-label\">Customer</label>\n          <div class=\"col-sm-9\" >\n                  \n                  <select   class=\"form-control digits\" id=\"exampleFormControlSelect9\"  formControlName=\"customer_id\" placeholder=\"select customer\" >\n                      <option *ngFor=\"let customer of data\" value=\"{{customer.id}}\">{{customer.name}}</option>\n                      \n                  </select>\n             \n          </div>\n      </div>\n      </form>\n    </div>\n    <div class=\"card-footer\" style=\" padding-left:50px;\">\n      <button class=\"btn btn-primary\" type=\"button\" style=\"width: 100px; height: 30px;\" (click)=onSubmit() placement=\"top\"\n      ngbTooltip=\"submit\" >Submit</button>&nbsp;\n      <button class=\"btn btn-warning\" type=\"button\" placement=\"top\" style=\" width: 100px; height: 30px;\"\n        ngbTooltip=\"reset\" (click)=\"onCancel()\">Reset</button>\n    </div>\n  </div>\n</div>"],"sourceRoot":"webpack:///"}